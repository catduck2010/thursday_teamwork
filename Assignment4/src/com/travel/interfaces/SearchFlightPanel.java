/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.travel.interfaces;

import com.sun.javafx.binding.SelectBinding;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author lihang
 */
public class SearchFlightPanel extends javax.swing.JPanel {

    /**
     * Creates new form SearchFlightPanel
     */
    private final JPanel bottomPanel;

    public SearchFlightPanel(JPanel p) {
        initComponents();
        txtMaxPrice.setText("");
        txtAirliner.setText("");
        this.bottomPanel = p;
        //btnSeatChooser.setBorder(btnSearch.getBorder());
        this.checkboxAirliner.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if(checkboxAirliner.isSelected())
                    txtAirliner.setEnabled(true);
                if(!checkboxAirliner.isSelected())
                    txtAirliner.setEnabled(false);
            }
        });
        
        this.checkboxMaxprice.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if(checkboxMaxprice.isSelected())
                    txtMaxPrice.setEnabled(true);
                if(!checkboxMaxprice.isSelected())
                    txtMaxPrice.setEnabled(false);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSeatChooser = new com.travel.util.SeatChooserJButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtFrom = new javax.swing.JTextField();
        txtTo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnGoBack = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        btnDateChooser = new com.travel.util.DateChooserJButton();
        txtAirliner = new javax.swing.JTextField();
        txtMaxPrice = new javax.swing.JTextField();
        checkboxAirliner = new javax.swing.JCheckBox();
        checkboxMaxprice = new javax.swing.JCheckBox();
        boxSection = new javax.swing.JComboBox<>();

        jLabel1.setText("Depart on");

        jLabel2.setText("Flying from");

        jLabel3.setText("Flying to");

        btnGoBack.setText("←");
        btnGoBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoBackActionPerformed(evt);
            }
        });

        btnSearch.setText("Search >>");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        txtAirliner.setEnabled(false);
        txtAirliner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAirlinerActionPerformed(evt);
            }
        });

        txtMaxPrice.setEnabled(false);

        checkboxAirliner.setText("Airliner");
        checkboxAirliner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxAirlinerActionPerformed(evt);
            }
        });

        checkboxMaxprice.setText("Max price");
        checkboxMaxprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkboxMaxpriceActionPerformed(evt);
            }
        });

        boxSection.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All Time", "Day (8AM-4PM)", "Evening (4PM-12AM)", "Night (12AM-8AM)" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnGoBack, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(boxSection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                                .addComponent(btnSearch))
                            .addComponent(txtFrom)
                            .addComponent(txtTo)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkboxAirliner)
                            .addComponent(checkboxMaxprice))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAirliner)
                            .addComponent(txtMaxPrice))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnGoBack)
                            .addComponent(jLabel1)
                            .addComponent(btnDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(boxSection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(btnSearch)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAirliner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkboxAirliner))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaxPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkboxMaxprice))
                .addContainerGap(119, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnGoBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoBackActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) bottomPanel.getLayout();
        this.bottomPanel.remove(this);
        layout.previous(this.bottomPanel);
    }//GEN-LAST:event_btnGoBackActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
       int dateRange = boxSection.getSelectedIndex();
        
        String from = txtFrom.getText();
        jLabel2.setForeground(Color.black);
        if("".equals(from)){
                JOptionPane.showMessageDialog(this, "Please enter the departure");
                jLabel2.setForeground(Color.red);
               return;
            }
        
        String to = txtTo.getText();
        jLabel3.setForeground(Color.black);
        if("".equals(to)){
                JOptionPane.showMessageDialog(this, "Please enter the destination");
                jLabel3.setForeground(Color.red);
               return;
            }
        
        if(checkboxAirliner.isSelected()==false && checkboxMaxprice.isSelected()==false){
            CardLayout layout = (CardLayout) bottomPanel.getLayout();
        FlightsPanel panel = new FlightsPanel(dateRange,bottomPanel, txtFrom.getText().trim(),
                txtTo.getText().trim(), btnDateChooser.getDate());
        this.bottomPanel.add("FlightsPanel", panel);
        layout.next(bottomPanel);
        }
        txtAirliner.setEnabled(false);
        txtMaxPrice.setEnabled(false);
        
        if(checkboxAirliner.isSelected()==true && checkboxMaxprice.isSelected()==false){
           
            String airliner = txtAirliner.getText();
            if("".equals(airliner)){
                JOptionPane.showMessageDialog(this, "Please enter the airliner name");
                checkboxAirliner.setForeground(Color.red);
               return;
            }
            else{
                CardLayout layout = (CardLayout) bottomPanel.getLayout();
        FlightsPanel panel = new FlightsPanel(dateRange,bottomPanel, txtFrom.getText().trim(),
                txtTo.getText().trim(), btnDateChooser.getDate(),txtAirliner.getText());
        this.bottomPanel.add("FlightsPanel", panel);
        layout.next(bottomPanel);
                
            }
        }
        
        try{
        if(checkboxAirliner.isSelected()==false && checkboxMaxprice.isSelected()==true){
            
            checkboxMaxprice.setForeground(Color.black);
            Double maxprice = Double.parseDouble(txtMaxPrice.getText());
            
            
                CardLayout layout = (CardLayout) bottomPanel.getLayout();
        FlightsPanel panel = new FlightsPanel(dateRange,bottomPanel, txtFrom.getText().trim(),
                txtTo.getText().trim(), btnDateChooser.getDate(),maxprice);
        this.bottomPanel.add("FlightsPanel", panel);
        layout.next(bottomPanel);       
            
        }
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(this, "Please enter correct value for max price!");
            checkboxMaxprice.setForeground(Color.red);
            return;  
        }
        
        try{
        if(checkboxAirliner.isSelected()==true && checkboxMaxprice.isSelected()==true){
           
            checkboxMaxprice.setForeground(Color.black);
            checkboxAirliner.setForeground(Color.black);
            String airliner = txtAirliner.getText();
            Double maxprice = Double.parseDouble(txtMaxPrice.getText());
            if("".equals(airliner)){
                JOptionPane.showMessageDialog(this, "Please enter the airliner name");
                checkboxAirliner.setForeground(Color.red);
               return;
            }
            else{
            
                CardLayout layout = (CardLayout) bottomPanel.getLayout();
                FlightsPanel panel = new FlightsPanel(dateRange,bottomPanel, txtFrom.getText().trim(),
                txtTo.getText().trim(), btnDateChooser.getDate(),airliner,maxprice);
                this.bottomPanel.add("FlightsPanel", panel);
                layout.next(bottomPanel);       
            }  
        }
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(this, "Please enter correct value for max price!");
            checkboxMaxprice.setForeground(Color.red);
            return;  
        }
        
        
        
    }//GEN-LAST:event_btnSearchActionPerformed

    private void txtAirlinerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAirlinerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAirlinerActionPerformed

    private void checkboxMaxpriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxMaxpriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkboxMaxpriceActionPerformed

    private void checkboxAirlinerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkboxAirlinerActionPerformed
 
    
    }//GEN-LAST:event_checkboxAirlinerActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> boxSection;
    private com.travel.util.DateChooserJButton btnDateChooser;
    private javax.swing.JButton btnGoBack;
    private javax.swing.JButton btnSearch;
    private com.travel.util.SeatChooserJButton btnSeatChooser;
    private javax.swing.JCheckBox checkboxAirliner;
    private javax.swing.JCheckBox checkboxMaxprice;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txtAirliner;
    private javax.swing.JTextField txtFrom;
    private javax.swing.JTextField txtMaxPrice;
    private javax.swing.JTextField txtTo;
    // End of variables declaration//GEN-END:variables
}
